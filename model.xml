<?xml version="1.0" encoding="utf-8"?>
<draftsman project-name="LiveDemo" xmlns="https://tracepaper.draftsman.io">
	<global>
	</global>
	<events>
		<event graphql-namespace="Feedback" graphql-name="create" name="CreateFeedbackRequested" type="ActorEvent">
			<field name="userId" type="String"></field>
			<field name="score" type="Int"></field>
			<field name="oneWord" type="String"></field>
			<field name="screenName" type="String"></field>
			<field name="comment" type="String"></field>
		</event>
		<event name="FeedbackCreated" source="Core.Feedback" type="DomainEvent">
			<field name="userId" type="String"></field>
			<field name="score" type="Int"></field>
			<field name="oneWord" type="String"></field>
			<field name="screenName" type="String"></field>
			<field name="comment" type="String"></field>
		</event>
		<event name="FileUploaded" type="DomainEvent" source="appsync">
			<field name="bucket" type="String"></field>
			<field name="uri" type="String"></field>
			<field name="location" type="String"></field>
			<field name="username" type="String"></field>
		</event>
	</events>
	<domain>
		<subdomain name="Core">
			<aggregate name="Feedback" business-key="userId" event-ttl="-1" snapshot-interval="100" backup-interval-days="0" backup-ttl-days="0">
				<field name="userId" type="String"></field>
				<field name="score" type="Int"></field>
				<field name="oneWord" type="String"></field>
				<field name="screenName" type="String"></field>
				<field name="comment" type="String"></field>
				<command name="Create">
					<trigger source="CreateFeedbackRequested" key-field="userId">
						<mapping target="userId" value="userId"></mapping>
						<mapping target="score" value="score"></mapping>
						<mapping target="oneWord" value="oneWord"></mapping>
						<mapping target="screenName" value="screenName"></mapping>
						<mapping target="comment" value="comment"></mapping>
					</trigger>
					<processor type="validator" condition="flow.score &gt; 0" id="0iwJ6G" exception="Score may be 1-5"></processor>
					<processor condition="flow.score &lt; 6" type="validator" id="uAexbP" exception="Score may be 1-5"></processor>
					<processor type="emit-event" ref="FeedbackCreated" id="2uwCRe">
						<mapping target="userId" value="#flow.userId"></mapping>
						<mapping target="score" value="#flow.score"></mapping>
						<mapping target="oneWord" value="#flow.oneWord"></mapping>
						<mapping target="screenName" value="#flow.screenName"></mapping>
						<mapping target="comment" value="#flow.comment"></mapping>
					</processor>
					<test-case name="CreateFeedback" trigger-event="CreateFeedbackRequested" expected-processing-status="success">
						<input name="userId" type="String" value="ID123"></input>
						<input name="score" type="Int" value="4"></input>
						<input name="oneWord" type="String" value="Geweldig"></input>
						<input name="screenName" type="String" value="j.doe"></input>
						<input name="comment" type="String" value="Hello World!"></input>
						<expected domain-event="FeedbackCreated" id="NLZHJD">
							<field name="userId" type="String" value="ID123"></field>
							<field name="score" type="Int" value="4"></field>
							<field name="oneWord" type="String" value="Geweldig"></field>
							<field name="screenName" type="String" value="j.doe"></field>
							<field name="comment" type="String" value="Hello World!"></field>
						</expected>
						<state>{}</state>
						<expected-state pk="ID123">{
  "userId": "ID123",
  "score": 4,
  "oneWord": "Geweldig",
  "screenName": "j.doe",
  "comment": "Hello World!",
  "version": 1
}</expected-state>
					</test-case>
					<test-case name="ScoreToLow" trigger-event="CreateFeedbackRequested" expected-processing-status="error">
						<input name="userId" type="String" value="ID123"></input>
						<input name="score" type="Int" value="0"></input>
						<input name="oneWord" type="String" value="text"></input>
						<input name="screenName" type="String" value="text"></input>
						<input name="comment" type="String" value="text"></input>
						<state>{}</state>
					</test-case>
					<test-case name="ScoreToHigh" trigger-event="CreateFeedbackRequested" expected-processing-status="error">
						<input name="userId" type="String" value="ID123"></input>
						<input name="score" type="Int" value="6"></input>
						<input name="oneWord" type="String" value="text"></input>
						<input name="screenName" type="String" value="text"></input>
						<input name="comment" type="String" value="text"></input>
						<state>{}</state>
					</test-case>
				</command>
				<event-handler on="FeedbackCreated">
					<mapping target="userId" value="userId" operand="set"></mapping>
					<mapping target="score" value="score" operand="set"></mapping>
					<mapping target="oneWord" value="oneWord" operand="set"></mapping>
					<mapping target="screenName" value="screenName" operand="set"></mapping>
					<mapping target="comment" value="comment" operand="set"></mapping>
				</event-handler>
			</aggregate>
		</subdomain>
	</domain>
	<views>
		<view name="Feedback" data-retention-days="-1" exclude-notification="false">
			<field name="userId" type="String" pk="true"></field>
			<field name="score" type="Int"></field>
			<field name="oneWord" type="String"></field>
			<field name="screenName" type="String"></field>
			<field name="comment" type="String"></field>
			<snapshot-handler id="H6dNEn" processor="item" sub-domain="Core" aggregate="Feedback" key-mapping="userId">
				<mapping target="userId" value="userId" operand="set"></mapping>
				<mapping target="score" value="score" operand="set"></mapping>
				<mapping target="oneWord" value="oneWord" operand="set"></mapping>
				<mapping target="screenName" value="screenName" operand="set"></mapping>
				<mapping target="comment" value="comment" operand="set"></mapping>
			</snapshot-handler>
			<query graphql-namespace="Feedback" field-name="get" type="get" authorization="anonymous" use-canonical-search="false"></query>
			<query graphql-namespace="Feedback" field-name="filter" type="filter" authorization="anonymous" use-canonical-search="false"></query>
		</view>
	</views>
	<projections>
	</projections>
	<notifiers>
		<notifier name="SetupEnvironment">
			<trigger source="@afterDeployment">
				<mapping target="dummy" value="#''"></mapping>
			</trigger>
			<activity type="iam-create-systemuser" fail-silent="true" id="vMB9LZ"></activity>
			<activity id="vkYuPh" fail-silent="true" type="create-iam-group" group-name="#'administrator'"></activity>
			<activity id="wjJU3t" fail-silent="true" group-name="#'administrator'" type="add-user-to-iam-group" username="#'system-user'"></activity>
		</notifier>
	</notifiers>
	<functional-scenarios clean-db="true" clean-iam="true" minimum-event-coverage="80" minimum-view-coverage="80">
		<scenario name="FeedbackTest">
			<activity path="Feedback.create" type="mutation" description="maak feedback aan" id="h0aRWH">
				<input name="userId" type="String" value="ID123"></input>
				<input name="score" type="Int" value="4"></input>
				<input name="oneWord" type="String" value="Top"></input>
				<input name="screenName" type="String" value="j.doe"></input>
				<input name="comment" type="String" value="Hello World!"></input>
				<expected-trace command="Core.Feedback.Create" status="success"></expected-trace>
			</activity>
			<activity path="Feedback.get" type="query" view="Feedback" description="Controleer of de feedback is aangemaakt" id="FIQlmb">
				<input name="key" type="String" value="ID123"></input>
				<expect-value name="oneWord" type="String" value="Top"></expect-value>
				<expect-value name="score" type="Int" value="4"></expect-value>
			</activity>
		</scenario>
	</functional-scenarios>
</draftsman>